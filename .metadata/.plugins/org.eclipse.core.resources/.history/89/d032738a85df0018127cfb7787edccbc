package org.mathi.stream;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.function.Predicate;

public class TestStream {

	static List<Integer> integerList = new ArrayList<Integer>();

	public static void main(String[] args) {
		createIntegerList();
		
		Optional<Integer> findFirst = howToUseFindFirst();
		System.out.println(findFirst.get());
		
		boolean allMatch = integerList.stream().allMatch(x->x%2==0);
		System.out.println(allMatch);
		

		boolean anyMatch = integerList.stream().anyMatch(x->x%8==0);
		System.out.println(anyMatch);
	}

	private static Optional<Integer> howToUseFindFirst() {
		Optional<Integer> findFirst = integerList.stream().filter(new Predicate<Integer>() {

			@Override
			public boolean test(Integer t) {
				// TODO Auto-generated method stub
				return t == 2;
			}
		}).findFirst();
		return findFirst;
	}

	private static void createIntegerList() {
		//integerList.add(1);
		integerList.add(2);
		//integerList.add(3);
		integerList.add(4);
		//integerList.add(5);
	}
}
